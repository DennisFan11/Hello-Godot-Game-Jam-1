[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://0mcdpx1uncmd"]

[ext_resource type="Script" path="res://addons/ShaderLib_v2_2_4/UV/SpherizeUV.gd" id="1_lmgy8"]

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_a3seb"]
output_port_for_preview = 0
default_input_values = [0, false, 1, true, 2, false]
op_type = 6

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_kthmu"]
output_port_for_preview = 0
default_input_values = [0, null, 1, Vector2(0.5, 0.5), 2, 10.0, 3, Vector2(0, 0)]
initialized = true
script = ExtResource("1_lmgy8")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_p24qe"]
source = 2

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_r0ehb"]
parameter_name = "pup_offset"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_r4p8l"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, 1e-05]
type = 3
function = 3
condition = 1

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_i6ojm"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0), 2, 1e-05]
type = 3
function = 5
condition = 1

[sub_resource type="VisualShaderNodeUIntOp" id="VisualShaderNodeUIntOp_ppdq5"]
output_port_for_preview = 0
operator = 8

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec2 pup_offset = vec2(1.000000, 1.000000);


// Spherize
#include \"res://addons/ShaderLib_v2_2_4/UV/UV.gdshaderinc\"

void fragment() {
// Vector2Parameter:4
	vec2 n_out4p0 = pup_offset;


	vec2 n_out2p0;
// Spherize:2
	float n_in2p2 = 10.00000;
	vec2 n_in2p3 = vec2(0.00000, 0.00000);
	{
		n_out2p0 = spherize_uv(UV, n_out4p0, n_in2p2, n_in2p3);
	}


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, n_out2p0);


	bool n_out7p0;
// Compare:7
	vec2 n_in7p1 = vec2(1.00000, 1.00000);
	{
		bvec2 _bv = greaterThanEqual(n_out2p0, n_in7p1);
		n_out7p0 = any(_bv);
	}


	bool n_out8p0;
// Compare:8
	vec2 n_in8p1 = vec2(0.00000, 0.00000);
	{
		bvec2 _bv = lessThanEqual(n_out2p0, n_in8p1);
		n_out8p0 = any(_bv);
	}


// UIntOp:9
	uint n_out9p0 = (n_out7p0 ? 1u : 0u) | (n_out8p0 ? 1u : 0u);


	bool n_out10p0;
// Switch:10
	bool n_in10p1 = true;
	bool n_in10p2 = false;
	if (n_out9p0 > 0u ? true : false) {
		n_out10p0 = n_in10p1;
	} else {
		n_out10p0 = n_in10p2;
	}


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);
	COLOR.a = (n_out10p0 ? 1.0 : 0.0);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(920, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeCustom_kthmu")
nodes/fragment/2/position = Vector2(-440, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_p24qe")
nodes/fragment/3/position = Vector2(-60, -240)
nodes/fragment/4/node = SubResource("VisualShaderNodeVec2Parameter_r0ehb")
nodes/fragment/4/position = Vector2(-860, 60)
nodes/fragment/7/node = SubResource("VisualShaderNodeCompare_r4p8l")
nodes/fragment/7/position = Vector2(-100, 100)
nodes/fragment/8/node = SubResource("VisualShaderNodeCompare_i6ojm")
nodes/fragment/8/position = Vector2(-100, 340)
nodes/fragment/9/node = SubResource("VisualShaderNodeUIntOp_ppdq5")
nodes/fragment/9/position = Vector2(260, 120)
nodes/fragment/10/node = SubResource("VisualShaderNodeSwitch_a3seb")
nodes/fragment/10/position = Vector2(460, 120)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 2, 0, 3, 0, 4, 0, 2, 1, 2, 0, 7, 0, 2, 0, 8, 0, 7, 0, 9, 0, 8, 0, 9, 1, 9, 0, 10, 0, 10, 0, 0, 1)
